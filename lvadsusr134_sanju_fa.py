# -*- coding: utf-8 -*-
"""LVADSUSR134-SANJU-FA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-xT1h4zdYWuao0isP2NQruAJcXk8Q6To
"""

import pandas as pd
df=pd.read_excel('/content/Walmart_Dataset Python_Final_Assessment.xlsx');

df.info()

"""**QUESTION 01**"""

import pandas as pd
df = pd.read_excel('/content/Walmart_Dataset Python_Final_Assessment.xlsx')
print("Basic Information about the Dataset:")
print("Number of rows and columns:", df.shape)
print("\nData Types:")
print(df.dtypes)
print("\nSummary Statistics:")
print(df.describe())
print("\nMissing Values (NAs):")
print(df.isna().sum())

"""**QUESTION 02**"""

#missing values
missing_values = df.isnull().sum()
print("Missing Values:")
print(missing_values)
#df.fillna(df.mean(), inplace=True)

# Identify and drop duplicate data entries
duplicate_rows = df.duplicated()
print("\nDuplicate Rows:")
print(duplicate_rows)
#df.drop_duplicates(inplace=True)

"""**QUESTION 03**"""

numerical_stats = df.describe()
mean_sales = df['Sales'].mean()
print("mean values for sales:")
print("\nMean Sales:", mean_sales)
median_quantity = df['Quantity'].median()
print("Median Quantity:", median_quantity)
mode_category = df['Category'].mode()[0]
print("Mode Category:", mode_category)
range_profit = df['Profit'].max() - df['Profit'].min()
print("Range of Profit:", range_profit)
variance_sales = df['Sales'].var()
print("Variance of Sales:", variance_sales)
std_quantity = df['Quantity'].std()
print("Standard Deviation of Quantity:", std_quantity)

"""**QUESTION 04**"""

import matplotlib.pyplot as plt
import seaborn as sns

# Histogram
plt.figure(figsize=(4, 6))
sns.histplot(df['Sales'], bins=20, kde=True, color='skyblue')
plt.title('Distribution of Sales')
plt.xlabel('Sales')
plt.ylabel('Frequency')
plt.show()

# Scatter Plot
plt.figure(figsize=(4, 6))
sns.scatterplot(x='Sales', y='Profit', data=df, color='orange')
plt.title('Scatter Plot of Sales vs. Profit')
plt.xlabel('Sales')
plt.ylabel('Profit')
plt.show()

# Box Plot
plt.figure(figsize=(4, 6))
sns.boxplot(x='Category', y='Profit', data=df)
plt.title('Box Plot of Profit by Category')
plt.xlabel('Category')
plt.ylabel('Profit')
plt.xticks(rotation=45)
plt.show()

# Bar Chart
plt.figure(figsize=(4, 6))
sns.countplot(x='Category', data=df, palette='viridis')
plt.title('Count of Orders by Category')
plt.xlabel('Category')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

# Pie Chart
plt.figure(figsize=(8, 10))
df['Geography'].value_counts().plot(kind='pie', autopct='%1.1f%%', colors=['lightblue', 'lightgreen', 'lightcoral'])
plt.title('Distribution of Orders by Geography')
plt.ylabel('')
plt.show()

"""**QUESTION 05**"""

import seaborn as sns
import matplotlib.pyplot as plt

# Calculate the correlation matrix
correlation_matrix = df.corr()

print(correlation_matrix)

# Plot the correlation between different variables
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()

"""  **QUESTION 06**"""

import seaborn as sns
import matplotlib.pyplot as plt

# Box plot to identify outliers
plt.figure(figsize=(10, 6))
sns.boxplot(data=df)
plt.title('Box Plot of Data')
plt.xticks(rotation=45)
plt.show()

# Histogram to visualize distribution and identify outliers
plt.figure(figsize=(10, 6))
sns.histplot(data=df, x=df.columns[0], bins=20, kde=True)
plt.title('Histogram of Data')
plt.show()

"""**QUESTION 07(01)**"""

import pandas as pd
import matplotlib.pyplot as plt

df['Year'] = df['Order Date'].dt.year

# i. Analyzing sales and profit trends over the years
sales_profit_trend = df.groupby('Year').agg({'Sales': 'sum', 'Profit': 'sum'})

# Plotting sales and profit trends
plt.figure(figsize=(12, 6))
plt.plot(sales_profit_trend.index, sales_profit_trend['Sales'], marker='o', label='Sales')
plt.plot(sales_profit_trend.index, sales_profit_trend['Profit'], marker='o', label='Profit')
plt.xlabel('Year')
plt.ylabel('Amount')
plt.title('Sales and Profit Trends Over the Years')
plt.legend()
plt.grid(True)
plt.show()

# ii. Determining the product category with the most growth in sales over the years

category_sales = df.groupby(['Year', 'Category']).agg({'Sales': 'sum'}).unstack()
category_sales.plot(kind='bar', stacked=True, figsize=(12, 6))
plt.xlabel('Year')
plt.ylabel('Sales')
plt.title('Sales Trend by Product Category Over the Years')
plt.legend(title='Category')
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.show()

category_sales = df.groupby('Category')['Sales'].sum().sort_values(ascending=False)
most_growth_category = category_sales.idxmax()
print("Product category with the most growth in sales over the years:", most_growth_category)

"""**QUESTION 07(02)**"""

import pandas as pd

#i Customer Analysis
top_customers_orders = df.groupby('EmailID')['Order ID'].count().nlargest(5)
top_customers_sales = df.groupby('EmailID')['Sales'].sum().nlargest(5)
print("Top 5 customers based on the number of orders placed:")
print(top_customers_orders)
print("\nTop 5 customers based on total sales generated:")
print(top_customers_sales)

# ii. Analyzing repeat purchase behavior by calculating the average time between orders
df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Next Order Date'] = df.groupby('EmailID')['Order Date'].shift(-1)
df['Time Between Orders'] = (df['Next Order Date'] - df['Order Date']).dt.days
average_time_between_orders = df.groupby('EmailID')['Time Between Orders'].mean()
print("\nAverage Time Between Orders for Each Customer:")
print(average_time_between_orders)

"""**QUESTION 07(03)**

i. Strategies to optimize the supply chain based on insights from sales velocity and order fulfillment data

Analyze sales velocity by product category, geography, or time period to identify fast-moving items and allocate resources accordingly.
Optimize inventory management by forecasting demand using historical sales data and adjusting inventory levels accordingly.
Improve order fulfillment processes by identifying bottlenecks and streamlining operations to reduce lead times and increase customer satisfaction.

 ii. Factors contributing to the geographic distribution of sales and how insights can inform targeted marketing strategies

 Analyze sales data by geographic region to identify regions with high or low sales volumes.
 Identify demographic and economic factors influencing purchasing behavior in different regions.

 iii.Identifying the patterns with this much of know how is bit diificult , the data needs some machine learning concepts . The models will identify the patterns among the data. We can use several machine learning models like Random Forest, Decesion Tree , Linear Regression.
"""





